/**
 * –í–∞–ª–∏–¥–∏—Ä—É–µ—Ç –∏ –æ—á–∏—â–∞–µ—Ç URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
 * @param {string} url - URL –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
 * @returns {string|null} - –≤–∞–ª–∏–¥–Ω—ã–π URL –∏–ª–∏ null
 */
const validateImageUrl = (url) => {
  if (!url || typeof url !== "string") {
    return null;
  }

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
  const invalidPatterns = [
    "httpsundefined",
    "httpundefined",
    "undefined",
    "null",
    "placeholder",
    "no-image",
  ];

  const urlLower = url.toLowerCase();
  if (invalidPatterns.some((pattern) => urlLower.includes(pattern))) {
    console.log("üö´ –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:", url);
    return null;
  }

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ URL –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å http:// –∏–ª–∏ https://
  if (!url.startsWith("http://") && !url.startsWith("https://")) {
    console.log("üö´ URL –Ω–µ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å http/https:", url);
    return null;
  }

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω—É—é –¥–ª–∏–Ω—É URL
  if (url.length < 10) {
    console.log("üö´ URL —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π:", url);
    return null;
  }

  return url;
};

/**
 * –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç –æ–±—â–∏–π —Ä–µ–π—Ç–∏–Ω–≥ –Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ä–µ–π—Ç–∏–Ω–≥–æ–≤
 * @param {string|number} rating_kp - —Ä–µ–π—Ç–∏–Ω–≥ –ö–∏–Ω–æ–ü–æ–∏—Å–∫–∞
 * @param {string|number} rating_imdb - —Ä–µ–π—Ç–∏–Ω–≥ IMDB
 * @param {string|number} tmdb_rating - —Ä–µ–π—Ç–∏–Ω–≥ TMDB
 * @returns {Object} - –æ–±—ä–µ–∫—Ç —Å —Ä–µ–π—Ç–∏–Ω–≥–æ–º –∏ —Ñ–ª–∞–≥–æ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
 */
const calculateRating = (rating_kp, rating_imdb, tmdb_rating) => {
  // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤—Å–µ —Ä–µ–π—Ç–∏–Ω–≥–∏ –≤ —á–∏—Å–ª–∞
  const kp = parseFloat(rating_kp) || 0;
  const imdb = parseFloat(rating_imdb) || 0;
  const tmdb = parseFloat(tmdb_rating) || 0;

  // –°–æ–±–∏—Ä–∞–µ–º –≤—Å–µ –Ω–µ–Ω—É–ª–µ–≤—ã–µ —Ä–µ–π—Ç–∏–Ω–≥–∏
  const validRatings = [kp, imdb, tmdb].filter((rating) => rating > 0);

  // –ï—Å–ª–∏ –Ω–µ—Ç –≤–∞–ª–∏–¥–Ω—ã—Ö —Ä–µ–π—Ç–∏–Ω–≥–æ–≤ - –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º
  if (validRatings.length === 0) {
    return {
      rating: null,
      showRating: false,
    };
  }

  // –ï—Å–ª–∏ —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–µ–π—Ç–∏–Ω–≥ - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –µ–≥–æ
  if (validRatings.length === 1) {
    return {
      rating: validRatings[0].toFixed(1),
      showRating: true,
    };
  }

  // –ï—Å–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä–µ–π—Ç–∏–Ω–≥–æ–≤ - —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º —Å—Ä–µ–¥–Ω–∏–π
  const averageRating =
    validRatings.reduce((sum, rating) => sum + rating, 0) / validRatings.length;

  return {
    rating: averageRating.toFixed(1),
    showRating: true,
  };
};

/**
 * –¢—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∏—Ä—É–µ—Ç –¥–∞–Ω–Ω—ã–µ —Ñ–∏–ª—å–º–∞ –∏–∑ API –≤ —Ñ–æ—Ä–º–∞—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
 * @param {Object} apiMovie - –¥–∞–Ω–Ω—ã–µ —Ñ–∏–ª—å–º–∞ –∏–∑ API
 * @returns {Object} - —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
 */
export const transformMovieData = (apiMovie) => {
  const details = apiMovie.details;

  // –í–∞–ª–∏–¥–∏—Ä—É–µ–º URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
  const posterUrl = validateImageUrl(details.poster);
  const backdropUrl = validateImageUrl(
    details.bg_poster?.backdrop || details.wide_poster
  );

  // –õ–æ–≥–∏—Ä—É–µ–º –ø—Ä–æ–±–ª–µ–º–Ω—ã–µ —Å–ª—É—á–∞–∏ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
  if (!posterUrl && details.poster) {
    console.log(
      "‚ö†Ô∏è –ü—Ä–æ–±–ª–µ–º–Ω—ã–π poster URL –¥–ª—è —Ñ–∏–ª—å–º–∞:",
      details.name,
      "URL:",
      details.poster
    );
  }
  if (!backdropUrl && (details.bg_poster?.backdrop || details.wide_poster)) {
    console.log(
      "‚ö†Ô∏è –ü—Ä–æ–±–ª–µ–º–Ω—ã–π backdrop URL –¥–ª—è —Ñ–∏–ª—å–º–∞:",
      details.name,
      "URL:",
      details.bg_poster?.backdrop || details.wide_poster
    );
  }

  // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º —Ä–µ–π—Ç–∏–Ω–≥ –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤—Å–µ—Ö –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤
  const ratingData = calculateRating(
    details.rating_kp,
    details.rating_imdb,
    details.tmdb_rating
  );

  // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—Å–µ –∂–∞–Ω—Ä—ã –±–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π
  let processedGenre;
  if (Array.isArray(details.genre)) {
    processedGenre = details.genre;
  } else if (typeof details.genre === "string") {
    processedGenre = details.genre.split(",").map((g) => g.trim());
  } else {
    processedGenre = details.genre;
  }

  return {
    id: details.id,
    ident: apiMovie.ident, // –î–æ–±–∞–≤–ª—è–µ–º ident –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ø–ª–µ–µ—Ä–∞–º–∏
    title: details.name,
    originalTitle: details.originalname,
    poster: posterUrl,
    backdrop: backdropUrl,
    rating: ratingData.rating,
    showRating: ratingData.showRating,
    year: details.released,
    genre: processedGenre,
    description: details.about,
    duration: details.duration,
    country: details.country,
    director: details.director,
    type: details.type,
    tags: details.tags || [],
    playlistUrl: apiMovie.playlist_url,
    age: details.age || null, // –í–æ–∑—Ä–∞—Å—Ç–Ω–æ–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –∏–∑ API
  };
};

/**
 * –¢—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∏—Ä—É–µ—Ç –º–∞—Å—Å–∏–≤ —Ñ–∏–ª—å–º–æ–≤ –∏–∑ API
 * @param {Array} apiMovies - –º–∞—Å—Å–∏–≤ —Ñ–∏–ª—å–º–æ–≤ –∏–∑ API
 * @returns {Array} - —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –º–∞—Å—Å–∏–≤
 */
export const transformMoviesArray = (apiMovies) => {
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ apiMovies —è–≤–ª—è–µ—Ç—Å—è –º–∞—Å—Å–∏–≤–æ–º
  if (!Array.isArray(apiMovies)) {
    console.warn(
      "transformMoviesArray: –ø–æ–ª—É—á–µ–Ω –Ω–µ –º–∞—Å—Å–∏–≤:",
      typeof apiMovies,
      apiMovies
    );
    return [];
  }

  return apiMovies.map(transformMovieData);
};

/**
 * –ë–µ–∑–æ–ø–∞—Å–Ω–æ –∏–∑–≤–ª–µ–∫–∞–µ—Ç –∏ —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∏—Ä—É–µ—Ç –∫–∞–Ω–∞–ª—ã –∏–∑ –æ—Ç–≤–µ—Ç–∞ API
 * @param {Object} apiResponse - –æ—Ç–≤–µ—Ç –æ—Ç API
 * @param {string} source - –∏—Å—Ç–æ—á–Ω–∏–∫ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
 * @returns {Array} - —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –º–∞—Å—Å–∏–≤ –∏–ª–∏ –ø—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤
 */
export const safeTransformApiResponse = (apiResponse, source = "unknown") => {
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –æ—Ç–≤–µ—Ç–∞
  if (!apiResponse) {
    console.warn(
      `safeTransformApiResponse (${source}): –ø–æ–ª—É—á–µ–Ω null/undefined –æ—Ç–≤–µ—Ç`
    );
    return [];
  }

  if (!apiResponse.channels) {
    console.warn(
      `safeTransformApiResponse (${source}): –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –ø–æ–ª–µ channels –≤ –æ—Ç–≤–µ—Ç–µ:`,
      apiResponse
    );
    return [];
  }

  // –ò—Å–ø–æ–ª—å–∑—É–µ–º transformMoviesArray –∫–æ—Ç–æ—Ä–∞—è —É–∂–µ –∏–º–µ–µ—Ç —Å–≤–æ—é –ø—Ä–æ–≤–µ—Ä–∫—É
  return transformMoviesArray(apiResponse.channels);
};

/**
 * –§–∏–ª—å—Ç—Ä—É–µ—Ç —Ñ–∏–ª—å–º—ã –ø–æ —Ç–∏–ø—É
 * @param {Array} movies - –º–∞—Å—Å–∏–≤ —Ñ–∏–ª—å–º–æ–≤
 * @param {string} type - —Ç–∏–ø –∫–æ–Ω—Ç–µ–Ω—Ç–∞ ('movie', 'tv', 'multfilm')
 * @returns {Array} - –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã–π –º–∞—Å—Å–∏–≤
 */
export const filterMoviesByType = (movies, type) => {
  return movies.filter((movie) => movie.type === type);
};

/**
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
 * @param {string} imageUrl - URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
 * @returns {boolean} - true –µ—Å–ª–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤–∞–ª–∏–¥–Ω–æ
 */
const isValidImageUrl = (imageUrl) => {
  if (
    !imageUrl ||
    imageUrl === "" ||
    imageUrl === null ||
    imageUrl === undefined
  ) {
    return false;
  }

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
  const invalidPatterns = [
    "httpsundefined",
    "httpundefined",
    "/placeholder",
    "placeholder.",
    "undefined",
    "null",
    "no-image",
  ];

  const urlLower = imageUrl.toLowerCase();
  if (invalidPatterns.some((pattern) => urlLower.includes(pattern))) {
    return false;
  }

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ URL –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å http:// –∏–ª–∏ https://
  if (!imageUrl.startsWith("http://") && !imageUrl.startsWith("https://")) {
    return false;
  }

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω—É—é –¥–ª–∏–Ω—É URL
  if (imageUrl.length < 10) {
    return false;
  }

  return true;
};

/**
 * –ü–æ–ª—É—á–∞–µ—Ç —Å–ª—É—á–∞–π–Ω—ã–π —Ñ–∏–ª—å–º –¥–ª—è hero —Å–µ–∫—Ü–∏–∏
 * –§–∏–ª—å—Ç—Ä—É–µ—Ç —Ñ–∏–ª—å–º—ã –±–µ–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –ø–µ—Ä–µ–¥ –≤—ã–±–æ—Ä–æ–º
 * @param {Array} movies - –º–∞—Å—Å–∏–≤ —Ñ–∏–ª—å–º–æ–≤
 * @returns {Object|null} - —Å–ª—É—á–∞–π–Ω—ã–π —Ñ–∏–ª—å–º —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º –∏–ª–∏ null
 */
export const getRandomFeaturedMovie = (movies) => {
  if (!movies || movies.length === 0) return null;

  // –§–∏–ª—å—Ç—Ä—É–µ–º —Ñ–∏–ª—å–º—ã, —É –∫–æ—Ç–æ—Ä—ã—Ö –µ—Å—Ç—å —Ö–æ—Ç—è –±—ã –æ–¥–Ω–æ –≤–∞–ª–∏–¥–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
  const moviesWithImages = movies
    .slice(0, 10) // –ë–µ—Ä–µ–º –ø–µ—Ä–≤—ã–µ 10 —Ñ–∏–ª—å–º–æ–≤
    .filter((movie) => {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –≤–∞–ª–∏–¥–Ω–æ–≥–æ backdrop –∏–ª–∏ poster
      const hasValidBackdrop = isValidImageUrl(movie.backdrop);
      const hasValidPoster = isValidImageUrl(movie.poster);

      // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ñ–∏–ª—å–º, –µ—Å–ª–∏ –µ—Å—Ç—å —Ö–æ—Ç—è –±—ã –æ–¥–Ω–æ –≤–∞–ª–∏–¥–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
      return hasValidBackdrop || hasValidPoster;
    });

  // –ï—Å–ª–∏ –ø–æ—Å–ª–µ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –Ω–µ –æ—Å—Ç–∞–ª–æ—Å—å –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö —Ñ–∏–ª—å–º–æ–≤, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º null
  if (moviesWithImages.length === 0) {
    console.log(
      "‚ö†Ô∏è getRandomFeaturedMovie: –ù–µ—Ç —Ñ–∏–ª—å–º–æ–≤ —Å –≤–∞–ª–∏–¥–Ω—ã–º–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏ –≤ –ø–µ—Ä–≤—ã—Ö 10"
    );
    return null;
  }

  // –í—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω—ã–π —Ñ–∏–ª—å–º –∏–∑ –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞
  const randomIndex = Math.floor(Math.random() * moviesWithImages.length);
  const selectedMovie = moviesWithImages[randomIndex];

  console.log("üé≤ getRandomFeaturedMovie: –í—ã–±—Ä–∞–Ω —Ñ–∏–ª—å–º", {
    title: selectedMovie.title,
    backdrop: selectedMovie.backdrop,
    poster: selectedMovie.poster,
  });

  return selectedMovie;
};
